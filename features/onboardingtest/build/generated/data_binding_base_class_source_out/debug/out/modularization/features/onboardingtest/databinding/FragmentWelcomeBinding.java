// Generated by view binder compiler. Do not edit!
package modularization.features.onboardingtest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import modularization.features.onboardingtest.R;

public final class FragmentWelcomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonUserRegistrationStart;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  private FragmentWelcomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonUserRegistrationStart, @NonNull ConstraintLayout container,
      @NonNull ImageView imageView, @NonNull TextView textView2, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.buttonUserRegistrationStart = buttonUserRegistrationStart;
    this.container = container;
    this.imageView = imageView;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWelcomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWelcomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welcome, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWelcomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_user_registration_start;
      Button buttonUserRegistrationStart = rootView.findViewById(id);
      if (buttonUserRegistrationStart == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      return new FragmentWelcomeBinding((ConstraintLayout) rootView, buttonUserRegistrationStart,
          container, imageView, textView2, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
